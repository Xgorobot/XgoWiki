{"meta":{"title":"Xgo Wiki","subtitle":"","description":"","author":null,"url":"https://xgorobot.github.io/XgoWiki","root":"/XgoWiki/"},"pages":[{"title":"About","date":"2022-08-02T05:41:14.787Z","updated":"2022-08-02T05:41:14.787Z","comments":true,"path":"about/index.html","permalink":"https://xgorobot.github.io/XgoWiki/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2022-08-02T05:41:14.787Z","updated":"2022-08-02T05:41:14.787Z","comments":true,"path":"categories/index.html","permalink":"https://xgorobot.github.io/XgoWiki/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2022-08-02T05:41:14.787Z","updated":"2022-08-02T05:41:14.787Z","comments":true,"path":"tags/index.html","permalink":"https://xgorobot.github.io/XgoWiki/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"正运动学分析","slug":"1 XGO-Mini Edu/四足机器人背景知识/正运动学分析","date":"2022-03-23T15:04:57.000Z","updated":"2022-08-02T05:41:14.426Z","comments":true,"path":"wiki/1 XGO-Mini Edu/四足机器人背景知识/正运动学分析/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/%E6%AD%A3%E8%BF%90%E5%8A%A8%E5%AD%A6%E5%88%86%E6%9E%90/","excerpt":"","text":"正运动学分析 本章涉及到四足机器人的建模分析方面的内容。通过对四足机器人单腿建立数学模型，解决单腿运动学正解与反解的问题 ## 2.1 运动学参数 为了便于整机设计与建模分析，在仿真软件Webots中，按照传统的四足机器人的外形结构建立了仿真模型，名为XGOmini。如图2-1所示。 图2-1所示的机器人仿真模型中，四足机器人每条腿具有三个自由度，由上自下依次是根关节、髋关节和膝关节。根关节与髋关节之间的连杆定义为基节，髋关节与膝关节之间的连杆定义为大腿，膝关节与足端之间的连杆定义为小腿。四条腿的结构外形和尺寸参数完全一致，表2-1给出了机器人参数。 2.2 单腿正运动学建模 运动学分析是四足机器人自由步态规划的基础，分为运动学正解和运动学逆解。机器人学中运动学正解是指，给定机械臂关节角度、连杆长度等参数，求解末端的位置和姿态；运动学逆解是指，给定机械臂末端的位置和姿态，求解机械臂对应的各关节运动参数。 四足机器人常用的的运动学建模方法有D-H方法、李代数方法等。D-H方法是Denavit 和Hartenberg提出的一种用于机器人运动学求解的通用方法。D-H方法的思路为，在机器臂的所有连杆上都建立一个坐标系，运用变换矩阵来描述相邻两连杆之间的空间变换关系，能够应用于任意自由度数串联机构的正向运动学场景。但是当自由度数过多时，运用D-H方法求解运动学逆解，会出现解不唯一和无法获得逆运动学解析解的问题。不过由于XGOmini单腿只有三个自由度，所以可以使用D-H方法进行运动学建模。 由于四足机器人的四条腿结构完全对称，所以只对单腿进行运动学建模即可。本文以左前腿为例，如图2-2所示，首先分别建立整机坐标系与单腿连杆坐标系，然后对单腿进行正运动学求解。 根据表2-1可以得到左前腿连杆坐标系的参数，如表2-2所示。 其中，连杆长度\\(a_{i-1}\\)表示的是两关节轴线之间的距离，即从\\(z_{i-1}\\)和\\(z_{i}\\)之间的公垂线长度； 连杆扭角\\(\\alpha_{i-1}\\)表示的是两关节轴线间的夹角，即从\\(z_{i-1}\\)到\\(z_{i}\\)绕\\(x_{i-1}\\)旋转的角度； 连杆距离\\(d_{i}\\)表示的是\\(x_{i-1}\\)到\\(x_{i}\\)沿\\(z_{i}\\)的距离； 连杆转角 表示的是从 到 沿 旋转的角度。 相邻两个连杆坐标系\\(\\{i\\}\\)和\\(\\{i-1\\}\\)之间的空间关系用变换矩阵\\(_{i}^{i-1}T\\)进行描述。是由以下四个子变换得到的： 绕\\(x_{i-1}\\)轴旋转\\(\\alpha_{i-1}\\)； 沿\\(x_{i-1}\\)轴平移\\(a_{i-1}\\)； 绕\\(z_{i}\\)轴旋转\\(\\theta_{i}\\)； 沿\\(z_{i}\\)轴平移\\(d_{i}\\)； c可以得到相邻连杆坐标系之间的变换矩阵\\(_{i}^{i-1}T\\)的表达式： \\[ \\begin{aligned} _{i}^{i-1}T &amp;=\\operatorname{Rot}\\left(x, \\alpha_{i-1}\\right) \\cdot \\operatorname{Trans}\\left(x, a_{i-1}\\right) \\cdot \\operatorname{Rot}\\left(x, \\alpha_{i-1}\\right) \\cdot \\operatorname{Trans}\\left(z, d_{i}\\right) \\\\ &amp;=\\left[\\begin{array}{cccc} c \\theta_{i} &amp; -s \\theta_{i} &amp; 0 &amp; a_{i-1} \\\\ s \\theta_{i} c \\alpha_{i-1} &amp; c \\theta_{i} c \\alpha_{i-1} &amp; -s \\alpha_{i-1} &amp; -d_{i} s \\alpha_{i-1} \\\\ s \\theta_{i} s \\alpha_{i-1} &amp; c \\theta_{i} s \\alpha_{i-1} &amp; c \\alpha_{i-1} &amp; d_{i} c \\alpha_{i-1} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\end{aligned}\\tag{2-1} \\] 将表2-2中的参数，代入式(2-1)中，可得两个相邻坐标系之间的变换矩阵，如下： \\[ \\begin{align} _{1}^{0} T&amp;=\\left[\\begin{array}{cccc} c \\theta_{1} &amp; -s \\theta_{1} &amp; 0 &amp; 0 \\\\ s \\theta_{1} &amp; c \\theta_{1} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\tag{2-2}\\\\ _{2}^{1} T&amp;=\\left[\\begin{array}{cccc} c \\theta_{2} &amp; -s \\theta_{2} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; -1 &amp; -L_{1} \\\\ s \\theta_{2} &amp; c \\theta_{2} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\tag{2-3}\\\\ _{3}^{2} T&amp;=\\left[\\begin{array}{cccc} c \\theta_{3} &amp; -s \\theta_{i} &amp; 0 &amp; L_{2} \\\\ s \\theta_{3} &amp; c \\theta_{i} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\tag{2-4}\\\\ _{4}^{3} T&amp;=\\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; L_{3} \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\tag{2-5}\\\\ _{0}^{B} T&amp;=\\left[\\begin{array}{cccc} 0 &amp; 0 &amp; 1 &amp; L / 2 \\\\ 0 &amp; -1 &amp; 0 &amp; W / 2 \\\\ 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\tag{2-6} \\end{align} \\] 由式(2-2)到式(2-6)，可以得到足端坐标系\\(\\{O_4\\}\\)相对于本体坐标系\\(\\{B\\}\\)的变换矩阵： \\[ \\begin{aligned} _{4}^{B} T &amp;={ }_{0}^{B} T \\cdot{ }_{1}^{0} T \\cdot{ }_{2}^{1} T \\cdot{ }_{3}^{2} T \\cdot{ }_{4}^{3} T \\\\ &amp;=\\left[\\begin{array}{cccc} S_{23} &amp; c_{23} &amp; 0 &amp; \\mathrm{~L} / 2+L_{2} S_{2}-L_{3} S_{23} \\\\ -S_{1} c_{23} &amp; S_{1} S_{23} &amp; c_{1} &amp; \\mathrm{~W} / 2+L_{1} c_{1}+L_{2} S_{1} c_{2}-L_{3} S_{1} c_{23} \\\\ c_{1} c_{23} &amp; -c_{1} S_{23} &amp; S_{1} &amp; L_{1} S_{1}+L_{2} c_{1} c_{2}-L_{3} c_{1} c_{23} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\end{aligned}\\tag{2-7} \\] 可以将\\(_{4}^{B} T\\)分解为转动部分和移动部分，如下式所示： \\[ \\begin{align} { }_{4}^{B} T&amp;=\\left[\\begin{array}{cccc} &amp; &amp; &amp; P_{x} \\\\ &amp; R &amp; &amp; P_{y} \\\\ &amp; &amp; &amp; P_{z} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\tag{2-8}\\\\ R&amp;=\\left[\\begin{array}{ccc} S_{23} &amp; c_{23} &amp; 0 \\\\ -S_{1} c_{23} &amp; S_{1} S_{23} &amp; c_{1} \\\\ c_{1} c_{23} &amp; -c_{1} S_{23} &amp; S_{1} \\end{array}\\right]\\tag{2-9}\\\\ P&amp;=\\left[\\begin{array}{c} { }^{B} P_{x} \\\\ { }^{B} P_{y} \\\\ { }^{B} P_{z} \\end{array}\\right]=\\left[\\begin{array}{c} \\mathrm{L} / 2+L_{2} s_{2}-L_{3} s_{23} \\\\ \\mathrm{~W} / 2+L_{1} c_{1}+L_{2} s_{1} c_{2}-L_{3} s_{1} c_{23} \\\\ L_{1} s_{1}+L_{2} c_{1} c_{2}-L_{3} c_{1} c_{23} \\end{array}\\right]\\tag{2-10} \\end{align} \\] 式(2-8)中R代表足端坐标系相对本体坐标系的姿态，在平面自由步态规划问题中不考虑足端姿态，P代表足端在本体坐标系中的位置。式(2-10)即为四足机器人左前腿的运动学正解，若已知该腿的三个关节角度，带入式中可得足端相对于坐标系中的位置。 已知根关节角度范围为\\(\\left[-50^{\\circ}, 90^{\\circ}\\right]\\)，髋关节角度范围为\\(\\left[-90^{\\circ}, 80^{\\circ}\\right]\\)，膝关节角度范围为\\(\\left[-60^{\\circ}, 45^{\\circ}\\right]\\)。利用matlab中的 robotics toolbox 创建四足机器人的单腿模型，在限制范围内，遍历各个关节角度，得到足端工作空间,如图2-3所示。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"四足机器人背景知识","slug":"1-XGO-Mini-Edu/四足机器人背景知识","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"背景介绍","slug":"1 XGO-Mini Edu/四足机器人背景知识/背景介绍","date":"2022-03-23T15:04:57.000Z","updated":"2022-08-02T05:41:14.436Z","comments":true,"path":"wiki/1 XGO-Mini Edu/四足机器人背景知识/背景介绍/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/%E8%83%8C%E6%99%AF%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"背景介绍 1.1 课题背景及研究的目的和意义 近几年，足式机器人的发展受到了世界各国的广泛关注。这是因为，相比于传统的轮式和履带式机器人，足式机器人不需要连续的运动路径。足式机器人的运动轨迹为离散的落足点，能够利用非结构化或崎岖地形中的可支撑地形区域行走，因此对复杂地形的适应能力更强。如图1-1所示，行星崎岖的地表上布满碎石，足式机器人在行星探索上相比于传统轮式机器人具有更大的应用价值和应用前景。 足式机器人在空间活动中也至关重要，例如在轨维修，大型空间站的在轨装配。空间站舱内外的空间机器人的工作环境是非结构化的非平坦的表面，所以足式机器人可以利用其离散的运动轨迹很好地在空间站舱内外移动。相比于单个机械臂的尺蠖式的移动，多足机器人的移动更加稳定，并且可以在操作的同时调整自身的位置和姿态。 常见的足式机器人有双足机器人、四足机器人和六足机器人。四足机器人拥有比双足机器人更好的稳定性，同时具有比六足机器人更灵活的运动性能。因此四足机器人具有好的发展潜力，成为了足式机器人研究中的热点。 四足机器人步态规划与控制技术一直是研究的重点，现有的研究中更多地关注了四足机器人的周期性步态，如trot步态和crawl步态等，这些步态的运动周期和摆动腿的顺序固定，这些步态较少地考虑环境因素，一般应用于平坦或地势起伏比较小的地面，不适用于非结构化的崎岖地形。非结构化的崎岖地形，通过一些条件约束，可以等效为一系列离散的落足点的集合。周期性步态无法保证实际的落足点落入该集合内，即无法满足行走于复杂地形。所以人们提出了一种考虑外界环境因素，非周期性的步态——自由步态。 自由步态是迈步顺序不固定，步长和迈步方向也不固定的一种非周期步态，自由步态规划中的机器人能够自主根据地形因素、运动学约束和稳定性判据计算出摆动腿及其落足点的位置，可以行走于复杂的非结构环境。因此，为了提高四足机器人的地形适应性。有必要对自由步态规划进行深入研究分析。 1.2 国内外在该方向的研究现状及分析 1.2.1 四足机器人研究现状 最早期的四足机器人主要由机械和液压控制，并且需要人工操作。最为典型的是 1968 年美国通用电气公司设计的四足步行机Crawling Truck，见图1-2。 东京工业大学于1976 年研发了四足机器人KUMO-I，见图1-3。KUMO-I是第一台具有自主行走的四足机器人，虽然KUMO-I的四条腿分别有一个电机驱动，但是它拥有一定越障能力，能够在起伏较小的地面上全向移动。 随着计算机技术和电机技术的快速发展，四足机器人拥有了更加灵巧的驱动关节和算力更强的控制器，可以通过复杂控制算法自主实现多种运动步态。 日本电气通讯大学参考了动物运动中神经中枢的反射行为，制了Tekken系列四足机器人，见图1-4。该系列四足机器人采用了基于神经震荡器的中枢模式发生器（Central Pattern Generator）来控制腿的运动。CPG不需要传感器反馈，只根据输入的传感器信号产生节律性运动信号，从而生成对地形自适应的行走步态。 近年来随着传感器技术和计算机技术的进一步发展，四足机器人搭载了深度摄像头、激光雷达等传感器，拥有了感知周围环境的能力，可以充分利用环境信息进行自主规划，提升地形适应能力。 自 2005 年以来，美国波士顿动力公司推出了 Big Dog、Cheetah、WildCat 、Spot多款四足机器人，见图1-5。 其中Big Dog是世界上第一款真正实现了野外行走的机器人，其通过激光雷达和视觉感知周围环境，将环境转化为可被规划的地图，在此基础上进行路径规划，实现了在复杂坡地上的自主运动。Cheetah猎豹仿生四足机器人在跑步机上可以达到45km/h的速度。仿猫四足机器人WildCat可以高速奔跑情况下灵活转弯。Spotmini四足仿生机器人体型小巧，质量仅约30kg，还可以搭载机械臂，完成自主作业。 国内的四足机器人研究起步较晚，但是仍有一些比较突出的成果。杭州宇树科技研发的四足机器人A1，具有较高的功率质量密度比，能够在草地、坡面、松软小石块路面进行自适应行走，还可以实现后空翻，见图1-6。浙江大学研制的四足机器人“绝影”载重可达到 20kg，走速度为每小时 6km。见图1-7。“绝影”在外力的干扰下可以用小碎步调整姿态。 目前国内四足机器人团队和公司更多关注于四足机器人的关节驱动、负载能力和运动性能上，对于四足机器人的环境感知，自主步态规划研究较少。 1.2.2自由步态研究现状 自由步态是一种根据地形信息和自身状态进行实时调整的智能化步态。自由步态分为两大类，分别为基于规则的和基于搜索的。 早期的自由步态规划大多是基于规则的，这种规划根据四足机器人当前重心、四条腿的足端位置、地形条件等信息，通过一组规则，规划下一步机器人的移动。 例如Hirose将地形分为可行区域和禁行区域，设计了基于周期性静步态的自由步态。Kumar和Waldron提出了一种改进的波形步态，提升了四足机器人的自主适应能力。该步态下，四足机器人可以根据当前的落足点自主调整之后的步态。但是这些基于规则的方法并未能考虑到全局地形信息，所以机器人在多步运动之后无法找到满足规则的下一步运动，，即陷入了“卡死”状态。 此后，Pal和Jayarajan K. 为了规避机器人出现“卡死”状态，提出了基于图搜索过程的局部最优自由步态规划，但约束过于简化，难以运用于实际场景。Pack D J和Kang H提出了一种基于搜索算法的全局步态规划，但是由于全局的规划空间过大，图搜索算法计算量太大，不适合于实时规划。 随着传感器技术的发展和计算机算力的提升，自由步态规划发生了巨大的变化。Kolter 等 LittleDog 的相关研究人员在他们发表的论文中较详细地介绍了一个完整的四足机器人的控制系统的框架结构，这个结构包括了高层规划器、低层规划器和低层执行控制器总共三层控制结构。高层规划器负责从三维地形栅格地图信息中，提取出能够供机器人落足的点集，采用专家示教方法为每个落足点打分。低层规划器在移动路径附近搜索代价最小或评价值最高的最佳落足点集。低层执行器完成最基础的运动控制。如图1-8，这种自由步态规划让LittleDog拥有强大的地形适应能力，可以通过复杂崎岖的地形。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"四足机器人背景知识","slug":"1-XGO-Mini-Edu/四足机器人背景知识","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"足端轨迹规划","slug":"1 XGO-Mini Edu/四足机器人背景知识/足端轨迹规划","date":"2022-03-23T15:04:57.000Z","updated":"2022-08-02T05:41:14.461Z","comments":true,"path":"wiki/1 XGO-Mini Edu/四足机器人背景知识/足端轨迹规划/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/%E8%B6%B3%E7%AB%AF%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92/","excerpt":"","text":"足端轨迹规划 四足机器人足端轨迹规划是自由步态规划中重要的一部分，足端轨迹影响着四足机器人迈步的准确性、行走的稳定性和足端落地的冲击力，同时影响着四足机器人的越障能力。 在周期步态之中，四足机器人的移动追求快速性，所以足端运动速度较大，足端轨迹规划的优化目标轨迹的平滑性。而在自由步态中，四足机器人的移动追求平稳性和越障性。所以本文中设计了一种矩形摆动轨迹，使得摆动腿在移动过程中与支撑面保持一定高度，尽可能地越过地面上可能存在的障碍。 如图2-5所示，矩形摆动轨迹分为三个阶段：竖直抬起阶段、水平移动阶段和竖直下降阶段。假设在本体坐标系下起始落脚点坐标为\\(\\left(x_{s}, y_{s}, z_{n}\\right)\\),目标脚点坐标为\\(\\left(x_{g}, y_{g}, z_{n}\\right)\\)，摆动腿将竖直抬起一定的高度\\(z_m\\)，然后水平移动到落脚点正上方，最后竖直落下。为了减少足端落地时带来的冲击力，需要在规划中给竖直下降阶段分配更多的运动时间，来降低足端运动速度。设单次摆动所需的时间为\\(T_m\\)，竖直抬起阶段用时为\\(T_m/4\\),水平移动阶段用时为\\(T_m/4\\)，竖直下降阶段\\(T_m/2\\)。 则可得到四足机器人的足端运动轨迹在本体坐标系下的方程， \\[ \\begin{align} F_{x}(\\mathrm{t})=\\left\\{\\begin{array}{lr} x_{s} &amp; , t \\in\\left[0, \\frac{T_{m}}{4}\\right) \\\\ x_{s}+\\frac{4 \\cdot\\left(x_{g}-x_{s}\\right)}{T_{m}} \\cdot\\left(\\mathrm{t}-\\frac{T_{m}}{4}\\right) &amp; , t \\in\\left[\\frac{T_{m}}{4}, \\frac{T_{m}}{2}\\right) \\\\ x_{g} &amp; , t \\in\\left[\\frac{T_{m}}{2}, T_{m}\\right] \\end{array}\\right.\\tag{2-15}\\\\ F_{y}(\\mathrm{t})=\\left\\{\\begin{array}{ll} y_{s} &amp; , t \\in\\left[0, \\frac{T_{m}}{4}\\right) \\\\ y_{s}+\\frac{4 \\cdot\\left(y_{g}-y_{s}\\right)}{T_{m}} \\cdot\\left(\\mathrm{t}-\\frac{T_{m}}{4}\\right) &amp; , t \\in\\left[\\frac{T_{m}}{4}, \\frac{T_{m}}{2}\\right) \\\\ y_{g} &amp; t \\in\\left[\\frac{T_{m}}{2}, T_{m}\\right] \\end{array}\\right.\\tag{2-16}\\\\ \\quad F_{z}(\\mathrm{t})=\\left\\{\\begin{array}{ll}z_{n}+\\frac{4 \\cdot z_{m}}{T_{m}} \\cdot \\mathrm{t} \\quad&amp;, t \\in\\left[0, \\frac{T_{m}}{4}\\right)\\\\ z_{n}+z_{m} &amp; , t \\in\\left[\\frac{T_{m}}{4}, \\frac{T_{m}}{2}\\right) \\\\ z_{n}+2 \\cdot z_{m}-\\frac{2 \\cdot z_{m}}{T_{m}} \\cdot \\mathrm{t} &amp; , t \\in\\left[\\frac{T_{m}}{2}, T_{m}\\right]\\tag{2-17} \\end{array}\\right. \\end{align} \\] 在实际控制过程中，运动学逆解算的输入值是足端坐标，所以需要将末端轨迹离散化，如果离散化后的控制点数量过少，则会导致实际运动轨迹无法很好地跟踪期望轨迹，因为末端在两个控制点之间的实际轨迹是一条曲线。假设只取每个阶段的终止位置进行逆解算控制，如图2-6所示，图中蓝色的方形为所取的控制点，红色实线代表期望轨迹，蓝色虚线代表实际运动轨迹。可以看到实际运动轨迹有着较大的偏差，在水平平移阶段抬腿高度有所下降影响越障性能，并且在竖直下降阶段偏斜着接触地面，这会给四足机器人带来侧向冲击力，影响稳定性。 所以需要在轨迹上取适量的控制点，在竖直上升轨迹和水平移动轨迹上各取10个控制点，在竖直下降轨迹上取20个控制点，再次在matlab中进行仿真。如图2-7所示，实际足端运动轨迹很好地跟踪了期望轨迹。在实际控制过程中，将以20Hz的频率依次发送控制点的结算结果，这样即满足了轨迹跟踪精度，也控制了竖直下降阶段足端的速度。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"四足机器人背景知识","slug":"1-XGO-Mini-Edu/四足机器人背景知识","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"逆运动学分析","slug":"1 XGO-Mini Edu/四足机器人背景知识/逆运动学分析","date":"2022-03-23T15:04:57.000Z","updated":"2022-08-02T05:41:14.464Z","comments":true,"path":"wiki/1 XGO-Mini Edu/四足机器人背景知识/逆运动学分析/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/%E9%80%86%E8%BF%90%E5%8A%A8%E5%AD%A6%E5%88%86%E6%9E%90/","excerpt":"","text":"逆运动学分析 2.3 单腿拟运动学建模 在四足机器人运动控制问题中，首先要进行足端运动轨迹规划，然后而不是直接给定各关节角度。这就需要通过运动学逆解，根据给定的足端轨迹，求解出对应的各个关节角度，将其作为舵机的输入，使足端按照规定的轨迹进行移动。 根据式(2-10)，进行整理可以得到。 \\[ \\begin{align} \\theta_{1}&amp;=\\arcsin \\left(\\frac{L \\cdot y-L_{1} \\cdot z}{y^{2}+z^{2}}\\right) \\tag{2-11}\\\\ \\theta_{3}&amp;=\\arcsin \\left(\\frac{x^{2}+y^{2}+z^{2}-L_{1}^{2}-L_{2}^{2}-L_{3}^{2}}{2 \\cdot L_{2} \\cdot L_{3}}\\right) \\tag{2-12}\\\\ \\theta_{2}&amp;=\\arcsin \\left(\\frac{L_{3} \\cdot \\mathrm{c}_{3} \\cdot L-\\left(L_{3} \\cdot \\mathrm{s}_{3}+L_{2}\\right) \\cdot x}{\\left(L_{3} \\cdot \\mathrm{s}_{3}+L_{2}\\right)^{2}+\\left(L_{3} \\cdot \\mathrm{c}_{3}\\right)^{2}}\\right)\\tag{2-13} \\end{align} \\] 其中， \\[ L=\\sqrt{\\left(y^{2}+z^{2}-L_{1}^{2}\\right)}\\tag{2-14} \\] 根据式(2-11)到式(2-14)，给定足端坐标，可求解左前腿对应的各关节角度。将运动学逆解算法移植到webot中，让四足机器人以对角步态前进，足端运动轨迹为正弦曲线。仿真结果如图2-4所示，四足机器人交替抬起对侧两腿向前以正弦轨迹迈步，稳定前进，证明了该逆运动学算法的正确性。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"四足机器人背景知识","slug":"1-XGO-Mini-Edu/四足机器人背景知识","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"串口通信协议","slug":"1 XGO-Mini Edu/二次开发/串口通信协议","date":"2022-03-11T09:45:57.000Z","updated":"2022-08-02T05:41:14.347Z","comments":true,"path":"wiki/1 XGO-Mini Edu/二次开发/串口通信协议/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/","excerpt":"","text":"文档目的和对象 本文档适用于任意上位机与XGO系列机器狗驱动板之间命令/数据交互的通信协议。示用于高阶开发者对XGO进行二次开发。 修订记录 2022.3.10 创建文档 硬件连接 用六角扳手到拧下背部两颗螺丝，左右两侧螺丝，尾部两颗螺丝后，拆除机器狗后背板，拔掉开关线。 如下图所示，主板一侧有两个串口通信接口，按主板丝印线序和上位机线序对接(TX接RX、RX接TX)，然后就可以调试了。两个端子对外供电电压分别是5V和3.3V，不可同时使用。 默认情况下3.3V端子被AI模块占用，如果想用其他设备进行串口控制，请将AI模组与主板的连接线拔下。 软件接口 采用标准TTL串行通讯。 波特率 115200 数据位 8 停止位 1 奇偶校验位 无 数据帧格式 数据帧采用固定格式：帧头+帧长度+数据+校验和+帧尾。 帧头 固定为0x55 0x00 帧长度 整个数据帧的字节数 数据 依据指令类型有不同含义，见第二部分 校验和 长度和数据的所有字节相加，取最低字节，然后取反 帧尾 固定为0x00 0xAA 指令 写指令，无应答（0x00） 帧头 帧长度 指令类型 首地址 数据 校验和 帧尾 0x55 0x00 0x00 data 0x00 0xAA 写指令会连续修改从首地址开始的数据，不会产生应答。 &gt;例如修改机器狗的前进速度，前进速度地址为0x30，使其以最大速度前进，即速度内容为0xFF，具体指令如下： &gt;0x55 0x00 0x09 0x00 0x30 0xFF 0xC7 0x00 0xAA &gt;其中校验和计算过程如下: &gt;0x09+0x00+0x30+0xFF=0x138，取最低字节0x38，取反得0xC7 读指令，有应答（0x02） 帧头 帧长度 指令类型 首地址 读取长度 校验和 帧尾 0x55 0x00 0x02 uint_8 0x00 0xAA 写指令会连续读取从首地址开始的数据，不会产生应答。 返回数据包的格式为: 帧头 帧长度 指令类型 首地址 数据 校验和 帧尾 0x55 0x00 0x12 data 0x00 0xAA &gt;例如读取12个舵机的角度,0x50为第一个舵机位置的地址,0x0C意思为连续读取12个,具体指令如下： &gt;0x55 0x00 0x09 0x02 0x50 0x0C 0x98 0x00 0xAA &gt;其中校验和计算过程如下: &gt;0x09+0x02+0x50+0x0C=0x67，取反得0x98 &gt;读取返回数据包: &gt;0x55 0x00 0x14 0x12 0x50 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x89 0x00 0xAA ## 机器狗坐标系定义 ### 整机坐标系 在初始站姿情况下，原点位于机身正下方，机器狗前进方向为X轴正向，左为Y轴正向，上为Z轴正向。 单腿坐标系 单腿坐标系用于描述足端的位置，四条腿对应四个独立的单腿坐标系，大腿关节为原点，机器狗前进方向为x轴正向，左为Y轴正向，下为Z轴正向。 机器狗内存表 地址 功能 读写 初始值 备注 模式 0x00 工作状态 读 0x00 状态信息 0x01 电池电量 读 0xff 范围为0-100，线性对应电量最低值-最高值 0x02 XGO版本 读 0x00 MINI 0x01 Lite 0x03 表演模式 写 0x00 0x00正常控制模式 0x01循环做动作 0x04 标定模式 写 0x00 0x01进入标定模式 0x00退出标定模式完成标定 0x13 蓝牙名称 写 XGOMINI 可命名长度为10个字节，不能为中文，命名后蓝牙名称为XGO_xxxxxx 0x20 卸载舵机 读写 0x00 0x00舵机处于正常工作状态，0x01卸载所有舵机，0x11-0x14依次卸载1-4号腿，0x21-0x24依次恢复1-4号腿 调试模式 0x21 重置舵机零位 写 0x00 0x00舵机处于正常工作状态0x01所有舵机记录当前位置为零位 该寄存器设定为0x01后，会自动跳变为0x00 0x30 前后移动速度 读写 0x80 范围为0x00-0xff，线性对应反向最大值-正向最大值，正方向按机器人坐标系，下同（注③） 整机模式 0x31 左右移动速度 读写 0x80 0x32 顺逆时针旋转速度 读写 0x80 方向遵循右手原则 0x33 身体沿x方向平移距离 读写 0x80 足端与地面接触点不变而身体扭动，下同 0x34 身体沿y方向平移距离 读写 0x80 0x35 身体高度 读写 0x80 0x36 身体绕x轴旋转角度 读写 0x80 方向遵循右手原则 0x37 身体绕y轴旋转角度 读写 0x80 0x38 身体绕z轴旋转角度 读写 0x80 0x39 以一定周期绕x轴旋转身体 读写 0x00 0x00停止，0x01-0xff线性对应最小-最大旋转速度 ，该功能与直接设置位置寄存器不能同时起作用，下同 0x3A 以一定周期绕y轴旋转身体 读写 0x00 0x3B 以一定周期绕z轴旋转身体 读写 0x00 0x3C 原地踏步 读写 0x00 0x00停止，0x01-0xff线性对应最小-最大踏步高度 0x3D 运动模式 读写 0x00 0x00常速运动0x01慢速运动0x02高速运动 0x3E 动作指令 写 0x00 详情见动作指令表 0为默认站姿 1-N为各个动作(见右侧) 0x80 以一定周期沿X轴方向平移运动 读写 0x00 0x00停止，0x01-0xff对应最小-最大旋转速度，移动幅度为位置限幅的一半 0x81 以一定周期沿Y轴方向平移运动 读写 0x00 0x82 以一定周期沿Z轴方向平移运动 读写 0x00 0x40 左前腿x方向足端位置 读写 0x80 范围为0x00-0xff，线性对应反向最大值-正向最大值，正方向按机器人坐标系，下同 单腿模式 0x41 左前腿y方向足端位置 读写 0x80 0x42 左前腿z方向足端位置 读写 0x80 0x43 右前腿x方向足端位置 读写 0x80 0x44 右前腿y方向足端位置 读写 0x80 0x45 右前腿z方向足端位置 读写 0x80 0x46 右后腿x方向足端位置 读写 0x80 0x47 右后腿y方向足端位置 读写 0x80 0x48 右后腿z方向足端位置 读写 0x80 0x49 左后腿x方向足端位置 读写 0x80 0x4A 左后腿y方向足端位置 读写 0x80 0x4B 左后腿z方向足端位置 读写 0x80 0x50 ID为11舵机位置 读写 0x80 范围为0x00-0xff，线性对应反向最大值-正向最大值，下同 舵机模式 0x51 ID为12舵机位置 读写 0x80 0x52 ID为13舵机位置 读写 0x80 0x53 ID为21舵机位置 读写 0x80 0x54 ID为22舵机位置 读写 0x80 0x55 ID为23舵机位置 读写 0x80 0x56 ID为31舵机位置 读写 0x80 0x57 ID为32舵机位置 读写 0x80 0x58 ID为33舵机位置 读写 0x80 0x59 ID为41舵机位置 读写 0x80 0x5A ID为42舵机位置 读写 0x80 0x5B ID为43舵机位置 读写 0x80 0x5C 设置舵机速度 读写 0x80 范围为0x00-0xff，线性对应最小值-最大值（仅在该模式下有效） 0x5D 舵机位置设置为站立姿态 写 0x00 0x00不起作用0x01舵机位置恢复站立时位置 该寄存器设定为0x01后，会自动跳变为0x00 0x61 IMU状态 读写 0x00 0x00关闭 0x01自稳定模式 0x62 ROLL角度 读 0x01 0x63 PITCH角度 读 0x02 0x64 YAW角度 读 0x03","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"二次开发","slug":"1-XGO-Mini-Edu/二次开发","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"}],"tags":[]},{"title":"编辑指南","slug":"Edit","date":"2022-02-26T11:45:57.000Z","updated":"2022-08-02T05:41:14.785Z","comments":true,"path":"wiki/Edit/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/Edit/","excerpt":"","text":"Markdown 本Wiki站的文章可通过点击右上角的 Edit 按钮跳转到Github页面，对文章源文件进行编辑。源文件编辑使用的格式为Markdown。 编辑完成后请联系Github管理员，由Github管理员push到Git page上。 中文Markdown官方教程 建议在本地的Markdown编辑器上编辑好后复制/上传，写起来会方便些。 目录 本Wiki站的所有文章目录结构按照Github仓库中文章源文件目录结构编辑（如下图），在创建新文章时可直接跳转到Github创建源文件。 创建文件 创建文件或文件夹时，请注意命名：Windows文件名不能包含下列任何字符 /：*？“ 创建.md文件后，请在文件中写入以下代码，并将&lt;文章标题&gt;修改为文章标题（否则无法在目录中显示），后续改动文章内容时不要删除改代码 --- title: &lt;文章标题&gt; toc: true date: tags: categories: --- 图片 文章插入图片时，格式为 ![文字描述](图片路径) 或者需要缩放图片时 &lt;img src=\"图片路径\" alt=\"文字描述\" style=\"zoom:100%;\" /&gt; 示例 ![Wiki目录](./demo_category.jpg) 缩放80% &lt;img src=\"./demo_category.jpg\" alt=\"Wiki目录\" style=\"zoom:80%;\" /&gt; 图片位置 一篇文章的图片建议统一放在文章源文件同级文件夹中，文件夹命名需要与文章名一致 插入图片","categories":[],"tags":[]},{"title":"产品简介","slug":"3 XGO-Ultra/产品简介","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.785Z","comments":true,"path":"wiki/3 XGO-Ultra/产品简介/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/3%20XGO-Ultra/%E4%BA%A7%E5%93%81%E7%AE%80%E4%BB%8B/","excerpt":"","text":"即将推出基于树莓派CM4 coming soon","categories":[{"name":"3 XGO-Ultra","slug":"3-XGO-Ultra","permalink":"https://xgorobot.github.io/XgoWiki/categories/3-XGO-Ultra/"}],"tags":[]},{"title":"Python库文件","slug":"1 XGO-Mini Edu/二次开发/Python库文件","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.347Z","comments":true,"path":"wiki/1 XGO-Mini Edu/二次开发/Python库文件/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/Python%E5%BA%93%E6%96%87%E4%BB%B6/","excerpt":"","text":"XGOLIB 库文档 文档目的 本文档旨在对XGO的API接口进行详细说明，用于上位机python开发。 修订记录 2022.3.10 创建文档 XGO类 所有的功能都是通过XGO所拥有的方法来实现的,在实例化一个XGO类对象时需要传入三个参数，第一个是上位机与机器狗进行串口通讯的物理接口，需要根据实际情况进行修改,第二个参数为波特率为115200，第三个参数为'xgomini'或'xgolite'根据机型进行选择。假设串口通讯接口为COM4，则实例化代码如下。 12dog = XGO(&#x27;COM4&#x27;,115200,&#x27;xgomini&#x27;)dog = XGO(&#x27;COM4&#x27;,115200,&#x27;xgolite&#x27;) 下文将借用dog这个对象进行类方法的功能描述。涉及到位姿调整和单腿控制相关的方法，可查看串口通讯协议文档，了解机器人坐标系定义。 移动相关方法 1.前后左右平移 move(direction, step) 参数名 格式 输入范围 说明 direction 字符 'x'、'X'、'y'、'Y' 'x'或'X'使机器狗前进或后退，'y'或'Y'使机器狗左移或者右移 step 数字 x:[-25,25],y:[-18,18] 该参数代表平移步长，根据方向，正值代表前进或左移，负值代表后退或右移。输入值超过范围时，按照极限值移动。 2.旋转 turn(step) 参数名 格式 输入范围 说明 step 数字 [-150,150] 该参数代表旋转速度，单位为°/s，正值为左转，负值为右转。 3.原地踏步 mark_time(data) 参数名 格式 输入范围 说明 data 数字 [10,35] 该参数代表原地踏步抬腿高度，单位为mm，输入为0时停止原地踏步 4.改变迈步频率 pace(mode) 速度 = 步频 x 步幅 参数名 格式 输入范围 说明 mode 字符串 ['normal','slow','high'] 该参数代表迈步频率，normal为默认步频，low为慢速步频，high为高速步频 5.停止移动 stop() 123456789101112131415161718192021222324示例#机器狗以18mm步长前进dog.move(&#x27;x&#x27;,18)#机器狗以5mm步长右移dog.move(&#x27;y&#x27;,-5)#下句代码可以正常执行，会以18mm左移dog.move(&#x27;Y&#x27;,30)#机器狗以60°/s的速度左转dog.turn(60)#机器狗以高速步频进行运动dog.pace(&#x27;high&#x27;)#机器狗以25mm的抬腿高度进行原地踏步dog.mark_time(25)#机器狗停止原地踏步dog.mark_time(0)#机器狗停止移动dog.stop() 库中基于这些方法封装了一系列方法以便于使用。 方法名 说明 move_x(step) 前后移动，相当于move('x', step) move_y(step) 左右移动，相当于move('y', step) forward(step) 前进，相当于move('x', abs(step)) back(step) 后退，相当于move('x', -abs(step)) left(step) 左移，相当于move('y', abs(step)) right(step) 右移，相当于move('y', -abs(step)) turnleft(step) 左转，相当于turn(abs(step)) turnright(step) 右转，相当于turn(-abs(step)) 位姿相关方法 调节位姿时，机器狗四条腿足端位置不发生改变，机身的位置或角度发生变化。 1.机身位置平移 translation(direction, data) 参数名 格式 输入范围 说明 direction 单字符或字符列表 'x'、'y'、'z'或包含以上值的列表 'x'代表前后平移，'y'代表左右平移，'z'代表身高 data 数字 x:[-35,35],y:[-18,18],z:[75,115] 该参数代表机身位置平移距离，单位为mm 2.机身姿态调整 attitude(direction, data) 参数名 格式 输入范围 说明 direction 单字符或字符列表 'r'、'p'、'y'或包含以上值的列表 'r'代表滚转角，'p'代表俯仰角，'y'代表偏航角 data 数字 r:[-20,20],p:[-15,15],y:[11,11] 该参数代表机身姿态调节幅度，单位为° 3.机身周期平移 periodic_tran(direction, period) 机器狗机身将以指定周期和方向进行往复平移，幅度为位置平移极限值的一半，可以同时进行多个方向的周期运动。机身周期运动和整机运动不可同时进行。 参数名 格式 输入范围 说明 direction 单字符或字符列表 'x'、'y'、'z'或包含以上值的列表 'x'代表前后平移，'y'代表左右平移，'z'代表身高 period 数字 [1.5,8] 该参数代表运动周期，单位为s;输入0时代表停止运动 4.机身周期旋转 periodic_rot(direction, period) 参数名 格式 输入范围 说明 direction 单字符或字符列表 'r'、'p'、'y'或包含以上值的列表 'r'代表滚转角，'p'代表俯仰角，'y'代表偏航角 period 数字 [1.5,8] 该参数代表运动周期，单位为s;输入0时代表停止运动 12345678910111213141516171819示例#机身向前平移18mmdog.translation(&#x27;x&#x27;,18)#机身向右平移10mm，身高设置为100mm#既可以输入单个值，也可以输入列表以控制多个方向的移动dog.translation([&#x27;y&#x27;,&#x27;z&#x27;],[-10,100])#机身俯仰角设置为10°，偏航角设置为-4°，滚转角设置为8°dog.attitude([&#x27;p&#x27;,&#x27;y&#x27;,&#x27;r&#x27;],[10,-4,8])#机身以3s的周期，进行前后往复平移dog.periodic_tran(&#x27;x&#x27;,3)#机身以3s的周期进行滚转角往复转动，以7.4s周期进行偏航角往复转动dog.periodic_rot([&#x27;r&#x27;,&#x27;y&#x27;],[3,7.4])#停止偏航角的往复转动dog.periodic_rot(&#x27;y&#x27;,0) 其余方法 恢复初始状态 reset() 停止所有运动，所有状态全部恢复到初始状态 设置自稳状态 imu(mode) 自稳状态下，机器狗将自动调节姿态角以保持背部处于水平位置，不可在开启时手动设定姿态角。 参数名 格式 输入范围 说明 mode 整数 0、1 0代表关闭、1代表开启 perform(mode) 表演模式，机器狗将循环执行预设的动作。 参数名 格式 输入范围 说明 mode 整数 0、1 0代表关闭、1代表开启 单腿控制 leg(leg_id, data) 控制指定腿的足端位置 参数名 格式 输入范围 说明 leg_id 整数 1、2、3、4 分别代表左前腿、右前腿、右后腿、左后腿 data 长度为3的数字列表 x:[-35,35],y:[-18,18],z:[75,115] 该参数代表足端位置，单位为mm 123示例#设置右前腿足端坐标为(10mm,-12mm,90mm)dog.leg(2,[10,-12,90]) 舵机控制 motor(motor_id, data) 控制舵机旋转角度 参数名 格式 输入范围 说明 motor_id 整数或整数列表 [11,12,13,21,22,23,31,32,33,41,42,43] 第一位数字代表舵机所在的腿，第二位数字代表在该腿上的位置，从下到上依次是1，2，3 data 数字或数字列表 下:[-65, 73],中:[-66, 93],上:[-31, 31] 该参数代表足端位置，单位为° 123456示例#设置右前腿中舵机转动角度为30°dog.motor(22,30)#设置右前腿上舵机转动角度为10°，左后腿下舵机转动角度为-20°dog.motor([23,41],[10,-20]) 单腿舵机卸载 unload_motor(leg_id) 使一条腿上的三个舵机卸载，不输出力矩，之后可以随意用手转动，一般用于编写动作 参数名 格式 输入范围 说明 leg_id 整数 1,2,3,4 分别代表左前腿、右前腿、右后腿、左后腿 所有舵机卸载 unload_allmotor() 使所有舵机卸载，不输出力矩，可以随意用手转动 单腿舵机加载 load_motor(leg_id) 使一条腿上的三个舵机保持当前位置加载，输出力矩，之后不可以用手转动，一般用于编写动作 参数名 格式 输入范围 说明 leg_id 整数 1,2,3,4 分别代表左前腿、右前腿、右后腿、左后腿 所有舵机加载 load_allmotor() 使所有舵机保持当前位置加载，输出力矩，之后不可以用手转动 设置舵机转动速度 motor_speed(speed) 调节舵机转动速度，适用于单独控制舵机的情况 参数名 格式 输入范围 说明 speed 整数 [0,255] 0为最低速，255为最高速 修改蓝牙名称 bt_rename(name) 重新修改蓝牙名称，调用该函数后蓝牙会断开链接 参数名 格式 输入范围 说明 name 字符串 长度不大于10 机器狗的蓝牙名称格式为XGO_xxx，xxx为可修改部分，仅支持ascii码中的字符。 执行预设动作 action(action_id) 参数名 格式 输入范围 说明 action_id 整数 [1,255] ID与动作对应关系见下表 ID 动作 ID 动作 ID 动作 1 趴下 2 站起 3 匍匐前进 4 转圈 5 原地踏步 6 蹲起 7 转动Roll 8 转动Pitch 9 转动Yaw 10 三轴转动 11 撒尿 12 坐下 13 招手 14 伸懒腰 15 波浪 16 左右摇摆 17 求食 18 找食物 19 握手 20 拜年 标定舵机位置 calibration(state) 如果开机后，某些关节出现了明显的位置偏差，可以调用该功能进行标定。其他情况请谨慎使用 参数名 格式 输入范围 说明 state 整数 [0,1] 1 进入标定状态，此时舵机卸力，然后将机器狗摆至标定状态，小腿与地面平行，大腿与躯干呈90°，躯干与地面平行；0 完成标定 读取相关方法 读取舵机角度 read_motor() 读取12个舵机的角度， 读取成功则返回长度为12的列表，对应编号[11,12,13,21,22,23,31,32,33,41,42,43]的舵机角度， 读取失败则返回空列表 读取电池电量 read_battery() 读取当前电池电量， 读取成功则返回1-100的整数，代表电池剩余电量百分比， 读取失败则返回0。 读取姿态角度 read_roll() read_pitch() read_yaw() 读取当前姿态角度，读取成功则浮点数，读取失败则返回0","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"二次开发","slug":"1-XGO-Mini-Edu/二次开发","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"}],"tags":[]},{"title":"ROS开发","slug":"1 XGO-Mini Edu/二次开发/XGO-Mini ROS开发包","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.347Z","comments":true,"path":"wiki/1 XGO-Mini Edu/二次开发/XGO-Mini ROS开发包/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/XGO-Mini%20ROS%E5%BC%80%E5%8F%91%E5%8C%85/","excerpt":"","text":"","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"二次开发","slug":"1-XGO-Mini-Edu/二次开发","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"}],"tags":[]},{"title":"开发者模式","slug":"1 XGO-Mini Edu/二次开发/开发者模式","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.362Z","comments":true,"path":"wiki/1 XGO-Mini Edu/二次开发/开发者模式/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"开发者固件仅保留了舵机角度控制，PID修改，舵机标定，舵机角度反馈，机身姿态角反馈，电池电量反馈，关机保护，低电量保护的功能。 相比于默认版本固件，开发者固件仅能通过串口进行控制，不能通过蓝牙远程控制，但是整体的控制频率更高，波特率改为1000000，底层对于舵机的控制频率为250Hz；取消了读取功能，改为以50Hz的频率向上位机发送数据帧，包括电池电量，姿态角度，舵机角度数据，数据反馈更及时，其中舵机角度由于硬件上的原因反馈频率目前为26Hz左右，具体数据帧格式见下表。 建议配合开发者版本的Python库和示例程序进行使用。 PID的默认参数为20、0、0，为了保护舵机和电路板建议PID参数不大于60。 参数名称 内容 帧头 0x55 0x00 帧长度 0x21 保留位 0x00 0x00 roll float32 pitch float32 yaw float32 motor11 uint8 motor12 uint8 motor13 uint8 motor21 uint8 motor22 uint8 motor23 uint8 motor31 uint8 motor32 uint8 motor33 uint8 motor41 uint8 motor42 uint8 motor43 uint8 battery uint8 校验和 uint8 帧尾 0x00 0xAA","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"二次开发","slug":"1-XGO-Mini-Edu/二次开发","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"}],"tags":[]},{"title":"如何烧录K210固件和更新SD卡文件","slug":"1 XGO-Mini Edu/常见问题/如何烧录K210固件和更新SD卡文件","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.466Z","comments":true,"path":"wiki/1 XGO-Mini Edu/常见问题/如何烧录K210固件和更新SD卡文件/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%A6%82%E4%BD%95%E7%83%A7%E5%BD%95K210%E5%9B%BA%E4%BB%B6%E5%92%8C%E6%9B%B4%E6%96%B0SD%E5%8D%A1%E6%96%87%E4%BB%B6/","excerpt":"","text":"如何烧录K210固件 准备工作 一台XGO-Mini K210机器狗 一台windows 计算机 一根连接计算机和机器狗的数据线 步骤 电脑下载安装软件kflash ​kflash下载提取码:69hx 连接狗狗模组，更新固件 ​1.打开软件，会弹出如下窗口 ​2.上方黄框选择.kfpkg文件（cocorobo-ai-module_firmware_2021-5-20_(中文)_STABLE.kfpkg） 文件下载地址 中文kfpkg，提取码:fns9 3.连接电脑和狗狗，下方框自动填入 ​4.开始下载并等待下载成功（保持电脑和狗狗连接稳定） ​5.完成后，模组的版本日期变更为20210520，界面变成中文 如何更新SD卡文件 关闭模组拔出屏幕模块，从SD卡槽中拿出sd卡，通过sd卡读卡器在电脑上读取sd卡文件，大致目录如下，将原来内容全部清除后，将新的内容填入，目录结构不变,SD卡中文文件下载,提取码:nesb SdCodes","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"常见问题","slug":"1-XGO-Mini-Edu/常见问题","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"}],"tags":[]},{"title":"如何烧录机器狗本体固件","slug":"1 XGO-Mini Edu/常见问题/如何烧录机器狗本体固件","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.467Z","comments":true,"path":"wiki/1 XGO-Mini Edu/常见问题/如何烧录机器狗本体固件/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%A6%82%E4%BD%95%E7%83%A7%E5%BD%95%E6%9C%BA%E5%99%A8%E7%8B%97%E6%9C%AC%E4%BD%93%E5%9B%BA%E4%BB%B6/","excerpt":"","text":"方法一使用JLink进行烧录 硬件连接 首先将jlink上的3V3、SWDIO、SWCLK、GND与主板上相对应的针脚链接。注意线序！插反了有可能会烧毁芯片！。 新建工程 打开JFLASH，新建工程，点击Target Device右侧按钮，在新窗口中选择STM32F405RG系列 开始烧录 首先将hex文件拖入软件页面中。 点击Target-&gt;Connect连接主板，若连接成功，下方会提示Connected Successful。若失败请检查下载工具与主板是否松动。 点击Target-&gt;Auto，完成烧录，如果没有Auto就manualprogramming-&gt;Program&amp;Verify也可以烧录。 方法二使用STLink进行烧录 硬件连接 首先将jlink上的3V3、SWDIO、SWCLK、GND与主板上相对应的针脚链接。注意线序！插反了有可能会烧毁芯片！。 开始烧录 打开ST-LINK Utillity 将hex文件拖入灰色区域 在上方点击Target -&gt; Connect，再点击Target -&gt; Program&amp;Verify 方法三使用USB进行烧录 硬件连接 把下载拨码拨到ON的位置，插上USB数据线与电脑连接 ISP烧录 打开FLYMCU，操作如下图所示 注意，使用USB ISP烧录时会擦除STM32内部的所有信息，也就是记录的舵机零位被擦出了，所以使用USB烧录后，需要进行标定。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"常见问题","slug":"1-XGO-Mini-Edu/常见问题","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"}],"tags":[]},{"title":"如何重新标定机器狗","slug":"1 XGO-Mini Edu/常见问题/如何重新标定机器狗","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.510Z","comments":true,"path":"wiki/1 XGO-Mini Edu/常见问题/如何重新标定机器狗/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%A6%82%E4%BD%95%E9%87%8D%E6%96%B0%E6%A0%87%E5%AE%9A%E6%9C%BA%E5%99%A8%E7%8B%97/","excerpt":"","text":"方法一，使用XGO APP软件 打开软件，首先通过蓝牙与机器狗相连接，然后点击右上角的齿轮进入设置页面，选择以开发者方式运行。 返回主界页面，软件上方出现了新的按钮，点击进入标定界面。 点击“进入标定模式”，此时舵机会卸载。 将机器狗摆至如下所示位置，建议在下方垫一张平整的纸，使机身与桌面平齐，大腿与机身呈90°夹角，小腿与大腿呈90°夹角，小腿贴地。 在APP中点击完成标定，机器狗会恢复到初始位置 方法二，使用驱动板标定拨码 首先用六角扳手将背盖拆开，然后把标定拨码拨到ON的位置，如果已经在ON的位置，那就拨回去，再拨到ON的位置。此时，此时舵机会卸载。 将机器狗摆至如下所示位置，建议在下方垫一张平整的纸，使机身与桌面平齐，大腿与机身呈90°夹角，小腿与大腿呈90°夹角，小腿贴地。 然后将标定拨码拨回，此时完成了标定，机器狗会恢复到初始位置。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"常见问题","slug":"1-XGO-Mini-Edu/常见问题","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"}],"tags":[]},{"title":"XGO APP蓝牙连接不上机器狗","slug":"1 XGO-Mini Edu/故障排除/XGO APP蓝牙连接不上机器狗","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.704Z","comments":true,"path":"wiki/1 XGO-Mini Edu/故障排除/XGO APP蓝牙连接不上机器狗/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/XGO%20APP%E8%93%9D%E7%89%99%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8A%E6%9C%BA%E5%99%A8%E7%8B%97/","excerpt":"","text":"重启手机蓝牙。 打开手机定位权限","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"故障排除","slug":"1-XGO-Mini-Edu/故障排除","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/"}],"tags":[]},{"title":"机器狗不走直线","slug":"1 XGO-Mini Edu/故障排除/机器狗不走直线","date":"2022-02-23T15:45:57.000Z","updated":"2022-08-02T05:41:14.704Z","comments":true,"path":"wiki/1 XGO-Mini Edu/故障排除/机器狗不走直线/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/%E6%9C%BA%E5%99%A8%E7%8B%97%E4%B8%8D%E8%B5%B0%E7%9B%B4%E7%BA%BF/","excerpt":"","text":"机器狗走直线的原理： 机器狗的主控板上装有陀螺仪，可以感知机器人当前的俯仰、滚转和偏航角，机器狗左转右转会改变偏航角。当机器狗接收到移动命令时，会记录下当前的偏航角，在移动过程中会保持偏航角不变，如果接收到转弯指令则会更新要追踪的偏航角。 机器狗不走直线有两种表现： 前进时机器狗斜着走，但朝向不变 遇到这种情况，可以在机器狗前进过程中，用手将它的前进朝向拨歪，看看它是否能转回原先的方向。如果没有旋转动作，那说明主板上的陀螺仪失效，请重启后再次尝试，如果多次重启后还是不行，代表陀螺仪故障。如果机器狗在拨歪之后可以转回原来的前进方向，就说明陀螺仪工作正常，斜着走可能是由于舵机零位不准导致的，请重新标定后再次尝试。 前进时机器狗转弯，朝向有较大变化 说明主板上的陀螺仪失效，请重启后再次尝试，如果多次重启后还是不行，代表陀螺仪故障。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"故障排除","slug":"1-XGO-Mini-Edu/故障排除","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/"}],"tags":[]},{"title":"Luwu Dynamics","slug":"Xgo","date":"2022-02-22T17:07:57.000Z","updated":"2022-08-02T05:41:14.786Z","comments":true,"path":"wiki/Xgo/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/Xgo/","excerpt":"","text":"公司简介 陆吾智能成立于2020年，专注于面向青少年人工智能教育的仿生四足机器狗XGO的研发，XGO拥有12自由度，可以模拟波士顿动力的spot mini的动作，作为教学教具可以让孩子学习机械，电子和编程，结合机器人视觉和自然语音处理功能和配套的人工智能教材，让青少年学习AI，为适应未来人工智能生活打下基础。目前公司有核心人员5名，具有哈工大和清华大学硕士以上学历。公司拥有五项核心专利，产品在教育机器人领域取得了各级政府和国家级奖项6项：ICRA DJI 人工智能挑战赛国际冠军、首届高校教育精品成果奖一等奖、全国大学生机械创新设计大赛一等奖、全国大学生机器人大赛Robomasters全国一等奖。哈尔滨大学生创业赛一等奖，2019年的互联网+大学生创新创业大赛省金奖。 产品系列 XGO系列产品功能对照表。 参数 XGO-Mini Edu XGO-Lite XGO-Ultra 上位机 K210包含摄像头，屏幕，麦克风 R329包含摄像头，屏幕，麦克风 树莓派 编程环境 XGOEdu桌面端 Blockly Python 结构件 1.5mm铝合金 1mm铝合金 1mm铝合金 整机尺寸 默认站姿25-15-16cm 默认站姿23-14-16cm 默认站姿23-14-22cm 整机重量 700g 500g 800g 机器狗关节 6V 4.5KG.CM金属壳钢齿360度磁编码双轴TTL串口舵机 6V 2.3KG.塑料壳金属齿300度双轴TTL串口舵机 6V 4.5KG.CM金属壳钢齿360度磁编码双轴TTL串口舵机 腿和足端 硅胶+尼龙 ABS 硅胶+ABS 下位机 STM32F405RGT6 STM32F405RGT6 ESP32 电池 18650 2S 2500毫安 18650 2S 2500毫安 18650 2S 2500毫安 充电器 8.4V1A 8.4V1A 8.4V1A 续航时间 综合工况1小时 综合工况2小时 综合工况2小时","categories":[],"tags":[]},{"title":"编程平台和课程","slug":"2 XGO-Lite/编程平台和课程","date":"2022-02-16T15:45:57.000Z","updated":"2022-08-02T05:41:14.784Z","comments":true,"path":"wiki/2 XGO-Lite/编程平台和课程/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/2%20XGO-Lite/%E7%BC%96%E7%A8%8B%E5%B9%B3%E5%8F%B0%E5%92%8C%E8%AF%BE%E7%A8%8B/","excerpt":"","text":"即将更新","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki/categories/2-XGO-Lite/"}],"tags":[]},{"title":"配套课程","slug":"1 XGO-Mini Edu/配套课程","date":"2022-02-15T15:45:59.000Z","updated":"2022-08-02T05:41:14.743Z","comments":true,"path":"wiki/1 XGO-Mini Edu/配套课程/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E9%85%8D%E5%A5%97%E8%AF%BE%E7%A8%8B/","excerpt":"","text":"课程简介 XGO-Mini K210机器狗系列课程主要面对小学高年级和初中，设置六大模块，共计40课时，其中包括《知识科普》系列课程，在这个模块中，学生将了解到什么是人工智能，人工智能的历史、图灵测试是什么、机器人的发展史，以及人工智能带给我们的思考。在《狗狗基础》和《机械狗运动》系列课程中，学生将探索机器狗的神奇奥秘；在《编程基础》系列课程中，可快速提升编程技能；为了使学生了解到最前沿、最有趣的人工智能知识，在《智能语音》和《智能图像》系列课程中，通过和狗狗亲密互动，用代码赋能狗狗，让狗狗变得更加聪明有智慧，成为一只人工智能狗！；在《狗狗高级》的课程中，首创了用图形化编程的方式让中小学生理解四足机器人步态算法，通过参数调节实现路径规划，最后综合运用所学知识完成项目。 该课程采用项目式教学方式，通过贴近生活和有趣的情景，带领学生深入探究和了解机器狗的原理，通过动手编程实现人工智能技术的应用，在寓教于乐中提升学生创新思维和实践能力，培养信息化思维和信息素养，为学生未来学习和生活打下坚实基础。 课程下载 请联系hello@xgorobot.com 索取课程资料。 课程目录","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"快速使用","slug":"1 XGO-Mini Edu/快速使用","date":"2022-02-14T15:45:57.000Z","updated":"2022-08-02T05:41:14.516Z","comments":true,"path":"wiki/1 XGO-Mini Edu/快速使用/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8/","excerpt":"","text":"准备工作 开机 把机器狗按照卧姿摆放，避免关节卡死，然后按下机器狗背部的电源开关，开关上的电源环形灯亮起，机器狗缓缓站立，表示开机成功。 关机 按下背部电源开关，环形灯开始闪烁，机器狗缓缓趴下，然后环形灯熄灭，表示系统完全关机。 充电 当机器狗电量过低时，机器狗开关按键的环形灯闪烁并趴下，此时代表机器狗需要充电。 将锂电池专用充电器插入机器狗腹部的充电口，约2小时可以充满电，充电时充电器电源指示灯为红色，如充满电指示灯变成绿色。 离线模式 离线模式指的是，机器狗脱离手机或者电脑，通过AI模组上的按键操作即可操作体验机器狗。 界面说明 将机器狗平铺后按下电源键，机器狗进入默认站立初始状态，此时屏幕亮起如下图所示。初始界面中有4个信息需要我们掌握，A、B和C键在模组上的位置如下图所示。 固件版本：表示当前AI模块的固件版本号，可以在官方网站下载最新版本固件及工具。 操作说明：A、B键操控界面菜单选项的切换，C键表示确认操作，长按C健退出当前程序。 运行上次程序：通过编程将程序上传到AI模块时，可以选择这个选项，让AI模块运行最新一次上传的程序； 尝试示例程序：选择这个选项，可以进入下一个界面，体验存储在AI模块的SD卡中的示例程序。 操作简介 根据初始界面说明，操作模块进入尝试示例程序界面，按键顺序应该是：B→C。我们使用A、B、C键来操作示例程序列表界面,A键：向上一条示例程序，B键：向下一条示例程序/翻页 ,C键：选中示例程序并加载，长按C健:退出示例程序至主菜单。 示例程序列表界面的操作按键与初始界面相同，有3个信息需要我们掌握， 1.示例程序种类：示例程序分为视觉类和语音类。 2.示例程序列表：被选中的示例程序会有白框，且名字会亮起； 3.示例程序序号：本固件版本的示例程序共有17个，斜线左侧的数字为选中的示例程序的序号，斜线右侧的数字为示例程序的总数。 示例程序 表演模式 进入程序后，屏幕模组循环显示表情动画，机器狗进入表演模式（执行多种动作）。 人脸检测 进入程序后，AI模组检测画面中的人脸。如果检测到人脸，屏幕模组显示时会使用矩形框出画面中的人脸，同时机器狗执行握手动作。 人脸识别 进入程序后，AI模组能够识别到人脸，并框出，标出关键点；按下B键拍下人脸，并标记为master，共可以拍摄3张人脸照片，分别标记为master、friend1、friend2。摄像头再次拍到已标记的人脸时，框会变为绿色，并显示标记及置信度（这张脸在多大程度上是这个标记的脸）。如果识别到master人脸，机器狗会执行三轴转动动作。 人脸跟随 进入程序后，AI模组进行人脸识别，根据画面中人脸的位置，机器狗自动调整将屏幕正中心对准人脸，形成跟随人脸的效果。 口罩检测 进入程序后，AI模组进行口罩检测，识别画面中的人像是否配戴了口罩；如果检测到未佩戴口罩，则会以红框标出人像，并显示检测可信度，同时机器狗执行摇头动作；如果检测到佩戴口罩，则会以绿框标出人像，并显示检测可信度，同时机器狗执行点头动作；如果检测可信度小于一定值时，会以蓝框标出人像。 猜拳游戏 进入程序后，模组会识别画面中的人手，根据手的不同手势，机器狗会显示使机器狗猜拳胜利的图片。(为提高识别准确率，使用时请尽量保证背景简洁，光线充足) 手势识别 进入程序后，模组会识别画面中的人手，根据手的不同手势，机器狗会做出不同的动作。e.g.手势-动作；拳头-转圈；拒绝-趴下；剪刀手-三轴联动；数字6-波浪；ok-坐下。(为提高识别准确率，使用时请尽量保证背景简洁，光线充足) 手部跟随 进入程序后，AI模组进行手部检测，能够识别到手部，并框出，根据画面中手部的位置，机器狗自动调整将屏幕正中心对准手部，形成跟随手部的效果。 交通标志识别 进入程序后，模组开始识别交通标识，可识别的标识包括：“直行”、“停止”、“禁止通行”和“停车”（标识可见下文1.交通标识）；在识别到标识后，机器狗会执行对应动作：前进、站立、后退、坐下。 红绿灯识别 进入程序后，当模组识别到绿灯时，会在屏幕上以绿色标志标识出来，同时机器狗开始直行；当模组识别到红灯时，会在屏幕以红色标志标识出来，同时机器狗停止运动。 物体分类 进入程序后，AI模组进行常见物体识别，如果识别到常见物体，则会在画面中框出，并标识出识别到的物体名称；如果未识别到常见物体，则会提示“Nothing Detected”。此外，当识别到的常见物体为人物(“person”)，机器狗会执行摇摆动作；当识别到的常见物体为狗(“dog”)，机器狗会执行撒尿动作；当识别到的常见物体为猫(“cat”)，机器狗会执行三轴转动动作。 骨头识别 进入程序后，屏幕提示拍摄骨头的照片，按下B键拍摄骨头的照片（共5张），而后屏幕提示拍摄青菜的照片，按下B键拍摄青菜的照片（共5张）。采样完成后，AI模组会识别骨头和青菜，当识别到骨头时，屏幕出现标识，同时机器狗执行觅食动作；当时别到青菜时，屏幕出现标识，同时机器狗执行站立动作。 区域颜色分析 进入程序后，屏幕中心会出现采色区域方块，并在屏幕上方显示此时区域内的颜色数值和对应色块。 自动学习并追踪颜色 进入后，程序首先自动捕捉并学习当前画面中心区域的颜色（持续约2秒）；之后进入追踪阶段，检测出画面中与学习内容颜色相近的区域，将其标识出来。 色块追踪 进入程序后，模组会识别画面中的色块（纯色方块），并会根据色块和自己的相对位置调整自己的位置。（色块颜色越鲜艳效果越好） 寻找二维码并解码 进入程序后，当屏幕画面中二维码（QR码）时，模组会将其标识出来，并在上方显示解码之后的文字内容。若文字内容为特定的一些命令语句（具体可见下文2.二维码），则机器狗会执行对应动作。 普通话识别（cs） 进入程序后，AI模组进行普通话识别。屏幕显示有多种动作指令语句，当模组识别到动作指令语句时，机器狗会执行对应的动作。 音频分析 进入程序后，屏幕模块会显示麦克风采集到的音频，同时机器狗会根据音频做出不同的动作，具体为：采集到低音（红色圈），机器狗执行趴下动作；采集到中低音（绿色圈），机器狗执行伸懒腰动作；采集到中高音（蓝色圈），机器狗执行坐下动作；采集到高音（紫色圈），机器狗执行站立动作。 示例程序图片素材下载 交通标识及二维码下载 提取码：3q31 移动端遥控模式 安卓用户在百度或者小米应用商店搜索XGO，苹果用户在苹果应用市场搜索XGO，下载安装后通过蓝牙遥控机器狗。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"编程平台","slug":"1 XGO-Mini Edu/编程平台","date":"2022-02-14T15:45:57.000Z","updated":"2022-08-02T05:41:14.710Z","comments":true,"path":"wiki/1 XGO-Mini Edu/编程平台/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E7%BC%96%E7%A8%8B%E5%B9%B3%E5%8F%B0/","excerpt":"","text":"XGOEdu简介 XGOEdu是一款为XGO K210模块研发的可视化积木编程平台。用户借助图形化的方式进行程序的编写，也可以直接阅读或编写Python程序。程序编写好以后可以在线执行或者上传到硬件模块中。借助该款平台，用户无需让硬件联网，即可为自己的项目进行AI赋能。该平台在提供入门Python语法的基础之上（逻辑、循环、数学运算、变量、文字处理、列表、字典、元组、集 合、函数、文件操作、时间）,另外提供了与模块编程&amp;相关的不同类别的功能，如:串口输入输出、10的输入 及输出、按钮/LED灯的控制、麦克风的数据获取、摄像头的控制、音视频处理、模型的使用（包括人脸识别、人脸辨识、物体识别、物体分类器、手写数字识别）。用户亦可以自行训练基于TinyYOLO或者 MobileNET的模型，通过我们的平台进行格式转换以后，将可以通过编程平台进行编程，直接运行在XGO的AI模块上。 XGOEdu下载 XGO-Mini k210的可视化编程平台下载。提取码:jiku 将机器狗连接计算机 把机器狗平铺在桌面上，保持电量充足，按键开机按钮，将随机的安卓数据线一段插入AI模组底部，另外插入电脑USB端口，如下图所示。 使用XGOEdu对机器狗进行编程 安装XGOEdu后，双击XGOEdu按钮，启动编程界面对机器狗进行编程 ,XGOEdu编程界面划分为6个区域： 文档存取区：程序项目命名、保存（保存为.xml档）、删除所有积木及所有积木一键截图 辅助区：样例加载、项目档导入及导出、语言设置 积木指令区：除基础积木以外（由“逻辑”至“串口通讯”），不同模式下拥有不同的扩展积木。 积木编程区：将积木拖入此区域中以进行程序编写。 Python编程区：当用户将积木拖入积木编程区以后，此处将会生成对应Python源代码，支持用户对代码进行编辑、复制、下载及上传，下载后缀为.py格式的python文档。 上传区：用户可选择使用在线调试或者下载模式。 XGOEdu主页面如下图所示，具体使用详情请参考课程PPT。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"蓝牙遥控","slug":"1 XGO-Mini Edu/蓝牙遥控","date":"2022-02-14T15:45:57.000Z","updated":"2022-08-02T05:41:14.714Z","comments":true,"path":"wiki/1 XGO-Mini Edu/蓝牙遥控/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E8%93%9D%E7%89%99%E9%81%A5%E6%8E%A7/","excerpt":"","text":"1.概述 XGO移动端是陆吾智能所开发的机器人控制器，软件通过手机蓝牙和机器人连接，实现数据的双向通讯，为用户提供方便简洁的遥控界面和其他多种多样的控制方式，极大的方便了用户对机器人的控制。 软件无需登录，安装即可使用，能够自动搜索和匹配机器人设备，识别机器人种类。 软件总体上共分为四个部分：主页面、蓝牙界面、设置界面和控制界面。主页面上提供了进入其他界面的入口；蓝牙界面提供和机器人蓝牙连接的交互功能；设置界面提供更改APP相关设置的选项；控制界面提供多种遥控功能。 软件适用于Android 4.4以上（含）系统的手机使用。 ### 2.模块详解 #### 2.1.主页面 点击软件图标 ，进入APP。 首先用户将看到欢迎界面如上图，该界面背景图片是陆吾智能mini版本的四足机器人，另外还显示了当前软件的版本号。欢迎界面持续显示3秒，然后进入主页面。 主页面提供了其他界面的入口，如上图所示，分别介绍如下： 1）蓝牙：若此时没有连接机器人设备，点击蓝牙按钮将进入蓝牙连接界面，可以搜索和连接机器人设备。 注意：此处需要用到手机蓝牙，第一次打开时用户需要授权本APP相应的权限，否则将不能正常使用蓝牙功能。进入蓝牙连接界面时，如果手机蓝牙未打开，将会提示用户打开蓝牙，否则将不能正常使用蓝牙功能。 蓝牙连接界面如下图所示。摇晃手机，APP将自动与最近的机器人设备相连。 若附近有多个设备或用户想通过机器人名称连接设备，可点击搜索按钮，在经过一段时间的搜索后，将会列出附近所有可用设备，如下图所示，点击某一设备名即可连接该设备。 若此时已经连接机器人设备，点击蓝牙按钮将弹出如下图所示窗口，用户可断开连接。 2）标定：点击标定按钮进入标定界面，用以重新设置机器人的初始位置。仔细阅读后点击我知道了，点击进入标定模式按钮，此时机器人各关节舵机将不再输出力矩，外力可转动，用户需将机器人摆放为指定姿势（参见《二次开发手册》），然后点击完成标定按钮，机器人将记录当前位置作为初始位置并自动完成重启。 注意：标定按钮在主界面中默认是隐藏的，用户可以在设置界面中取消隐藏，具体操作请参阅设置一节。该操作属于专业用户操作，操作不可逆，请认真阅读说明后操作。 3）设置：点击设置按钮进入设置界面，如下图所示，用户可以设置“退出APP是否自动关闭蓝牙”，以及设置语言（目前仅支持中、英文） 注意：以开发者身份运行此项目选中是选项时，主界面的标定按钮取消隐藏。 4）关于：点击关于按钮进入关于界面，查看更多关于本产品的信息。 5）控制界面：点击表演模式、整机控制、单腿控制、舵机控制按钮分别进入不同控制界面，在主页面中左右滑动切换不同模式，可对已经连接的机器人设备进行实时控制，具体请参阅下一节。 #### 2.2.控制界面 控制界面使用户能够按照不同方式直接地控制机器人，相当于用户拥有了多个遥控器，分别介绍如下： 1）整机控制：整机控制提供给用户四种操作方式，普通用户通过按钮控制机器人前后左右运动及旋转；进阶用户通过摇杆控制机器人前后左右运动及旋转；XYZ允许用户通过摇杆控制机器人身体三维平移；PRY允许用户通过摇杆控制机器人身体三维旋转。此外通过拖动下方滑杆还可以控制机器人身高，通过点击右上角按钮更改运动模式、开闭陀螺仪等。蓝色表盘显示当前设备电量，未连接设备时电量为0；红色表盘显示当前速度。上两图给出了普通和高级的界面。 2）表演模式：用户通过点击各按钮让机器人执行相应的动作，点击轮播机器人将重复执行所有动作，点击Reset机器人将恢复初始状态。 3）单腿控制：该界面允许用户分别直接控制机器人的某一条腿，通过选择要控制的腿，然后拖动滑杆，即可改变该条腿的三维坐标系空间位置。 4）舵机控制：该界面允许用户分别直接控制机器人的某一个舵机，通过选择要控制的舵机位置，然后拖动滑杆，即可改变相应舵机的角度。 3.功能详解 使用遥控器控制机器人前进功能示例 1）进入APP，进入主页面后点击蓝牙按钮，如上图所示，点击允许打开蓝牙，进入蓝牙连接界面，摇一摇手机，APP将自动连接机器人设备并跳转至主界面。 2）连接成功后，点击整机控制按钮进入遥控界面，以普通控制方式为例，点击左侧向上按键，将看到机器人向前运动，松开按键机器人停止运动。 3）点击左上角返回按钮返回主界面，点击蓝牙按钮断开连接。连续两次点击返回键退出APP。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"快速使用","slug":"2 XGO-Lite/快速使用","date":"2022-02-14T15:45:57.000Z","updated":"2022-08-02T05:41:14.780Z","comments":true,"path":"wiki/2 XGO-Lite/快速使用/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/2%20XGO-Lite/%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8/","excerpt":"","text":"准备工作 开机 把机器狗按照卧姿摆放，避免关节卡死，然后按下机器狗背部的电源开关，开关上的电源环形灯亮起，机器狗缓缓站立，表示开机成功。 关机 按下背部电源开关，环形灯开始闪烁，机器狗缓缓趴下，然后环形灯熄灭，表示系统完全关机。 充电 当机器狗电量过低时，机器狗开关按键的环形灯闪烁并趴下，此时代表机器狗需要充电。 将锂电池专用充电器插入机器狗腹部的充电口，约2小时可以充满电，充电时充电器电源指示灯为红色，如充满电指示灯变成绿色。 离线模式 离线模式指的是，机器狗脱离手机或者电脑，通过AI模组上的按键操作即可操作体验机器狗。 遥控模式 使用移动端APP遥控机器狗。 编程模式 编程模式指的是，利用封装好的积木或者机器狗python库对机器狗进行二次开发。","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki/categories/2-XGO-Lite/"}],"tags":[]},{"title":"硬件介绍","slug":"1 XGO-Mini Edu/硬件介绍","date":"2022-02-13T15:45:57.000Z","updated":"2022-08-02T05:41:14.704Z","comments":true,"path":"wiki/1 XGO-Mini Edu/硬件介绍/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"XGO-Mini K210架构图 XGO-Mini K210版本核心架构上位机是K210人工智能模组，机器狗AI相关任务都由上位机完成。下位机使用MCU开发，负责机器狗的电源管理，舵机驱动和核心步态算法等，封装了完整的串口通信协议方便上位机调用。 XGO-Mini K210系统架构图 结构介绍 XGO-Mini K210的主体结构是由1.5mm厚的铝合金结构件和全金属磁编码舵机组成，腿部由硅胶小腿和尼龙脚垫组成，头部的AI模组和驱动板由4pin信号线连接，内置2节18650锂电池，具体结构如下图所示,这里提供 XGO-Mini K210 3D模型下载，提取码:2mdt。 AI模组 AI模组支架 机器狗前盖 机器狗后盖 自锁开关 18650 2S电池 核心驱动板 机器狗底盖 充电孔 金属高速磁编码总线舵机 ③机器狗前盖、④机器狗后盖和⑧机器狗底盖作为机器狗机架，用于联接各部件。前后腿分别通过四颗螺钉固定在机器狗底盖前后侧；核心驱动板通过四颗塑料螺钉固定在机器狗底盖中间。 每条腿上各搭载三个舵机作为肘、肩、髋关节。机械上，三个关节舵机使用铝合金结构件进行固定联接。电气上，肘关节舵机和肩关节舵机，肩关节舵机和髋关节舵机，髋关节舵机和核心驱动板之间各使用一条舵机线连接，使得核心驱动板能够驱动并控制所有的关节舵机。 AI模组与AI模组支架一起固定在机器狗前盖上，并通过AI模组串口连接线与核心驱动板进行连接。 开关通过螺母固定在机器狗后盖上，并与核心驱动板进行连接。开关为自锁类型，即按下后不回弹且机器狗处于持续通电状态；再次按下后机器狗断电并在3~4秒后趴下关机。 18650 2S电池共两节，通过正确的正负极装入核心驱动板上的电池架上。 充电孔集成在核心驱动板上，从机器狗底盖露出。 舵机介绍 XGO-Mini的模块化伺服关节由直流空心杯电机、减速齿轮组、12位磁编码器和集成控制电路组成，自带闭环控制与规划算法，高速总线通讯，360度角度可控，支持速度、位置、电流、温度反馈与控制参数调整功能，为机器人提供高性能伺服驱动 。定制的关节提供了pid参数调节，优化了关节阻抗特性（柔顺性），在基本的运动学步态规划基础上，结合对重心的考虑和IMU的反馈，以及上层控制指令的要求，可进行实时的调整。同时采用了大速比，高效率的减速器，保证了柔顺性的同时，提高了负载自重比。 电池及充电器 XGO-Mini采用18650 2500毫安3C标准电池，采用宽电压充电器设计，提供国标，美标，英标和欧盟四种充电插头。 上位机K210介绍 AI模块作为人工智能相关应用的主控模块，拥有基础计算机视觉识别功能和机器学习模型的推理功能，可帮助实现入门和进阶级别的AI应用。 AI模块主板 内置勘智K210芯片，采用RISC-V处理器架构，具备视听一体，自主IP核与可编程能力强三大特点。 支持Micro SD卡存储影像、音频、视频、 机器学习模型等资料。 集成摄像头模块的插座，供前置拍摄使用。 屏幕模块 集成摄像头模块插座，供后置拍照使用; 1.54寸LCD全彩屏幕，显示JPG, BMP等格式图片； 可用于外接的2.5mm音频界面； 摄像头模块 AI摄像头分辨率为30w像素，可分别插在屏幕模块或者AI模块上，从而变成前置或者后置摄像头。 下位机XGO Driver介绍 选用STM32F405RGT6，该芯片为 ARM®Cortex®-M4 32 位 RISC内核，工作频率为 168Mhz，具有 64 个引脚，满足了实时运动学逆解算的算力需求，并且拥有足够的接口与外设通讯，使用串口与串口舵机通信，IIC接口读取陀螺仪MPU9250数据，系统使用两节18650锂电池供电。 XGO-Mini 下位机原理图","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"硬件介绍","slug":"2 XGO-Lite/硬件介绍","date":"2022-02-13T15:45:57.000Z","updated":"2022-08-02T05:41:14.783Z","comments":true,"path":"wiki/2 XGO-Lite/硬件介绍/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/2%20XGO-Lite/%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"XGO-lite 2 系统架构 XGO-lite 2版本核心架构上位机是树莓派CM4，机器狗AI相关任务都由上位机完成。下位机使用MCU开发，负责机器狗的电源管理，舵机驱动和核心步态算法等，封装了完整的串口通信协议方便上位机调用。","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki/categories/2-XGO-Lite/"}],"tags":[]},{"title":"性能参数","slug":"1 XGO-Mini Edu/性能参数","date":"2022-02-12T15:45:57.000Z","updated":"2022-08-02T05:41:14.702Z","comments":true,"path":"wiki/1 XGO-Mini Edu/性能参数/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E6%80%A7%E8%83%BD%E5%8F%82%E6%95%B0/","excerpt":"","text":"功能描述 可实现AI边缘计算图形化编程，例如人脸检测，物体分类，语音识别等常用程序。 可实现全向移动，六维姿态控制，多种运动步态及运动叠加，内置九轴陀螺仪，可保持身体自平衡。 产品配套专属的电脑端图形化编程平台，内嵌常用例程。 伺服舵机具有关节角度回读功能，可用于示教编程。 平台特性 IMU姿势自稳--通过IMU获得的姿态数据，采用闭环控制的方式，无论平面如何晃动，机器狗都保持稳定。 整机六自由度姿态控制--足尖不动的情况下，实现身体六个自由度的运动控制。 IMU姿势柔顺--通过IMU获得的姿态数据，闭环控制实现机器狗可以实适应外力，调整到手掰动的目标姿态，实现示教功能。 用户通讯与二次编程接口--开放底层串口协议，用于二次开发和验证。 运动步态规划--机器狗低中高三种姿势匹配三种速度，采用不同的步态策略和规划算法 运动学与动力学仿真接口--在ros环境下，在rviz和gazebo平台上进行运动学与动力学仿真。 全向运动控制--由于具有12个主动关节，通过运动学解耦实现机器狗前进平移转动全向运动，并支持多个方向的运动叠加。 人工智能--机器视觉，人脸识别，语音识别，模行训练等AI功能。 配置参数 机器狗套件包含12个总线舵机；AI模组；机器狗驱动和钣金件；电源适配器 1个。 机器狗零件材质为铝合金材质，阳极氧化上色，安全无毒。 定制串口总线伺服舵机，可实现精准动作的控制及表达。 配套完整的课程体系，包含教学PPT，教师教案，例程以及PC端编程平台。 技术参数 整机参数: 型号：XGO-Mini K210 尺寸：默认站姿长25cm宽15cm高16cm 重量：700g 材质：身体航空铝材，硅胶小腿，尼龙足尖 舵机参数: 型号：总线串口舵机 输出扭矩：4.5KG•CM； 转速（S/60°）：0.1 S/60°； 精度：0.01 工作电压范围：4.8V～7.4V 工作温度：-20℃～ +60℃； 角度范围：0~360°； 重量：20±1g。 马达类型：空心杯 AI模组参数： 芯片：嘉楠K210 屏幕：全彩LCD屏幕，支持正反拍摄，可显示视频，图片及文字。 SD卡支持：支持SD卡，可读写AI模型和图片及音乐。 麦克风：MEMS数字麦克风 按键：3个可编程按键。 摄像头：OV2640，30W像素 外接：串口，IIC等 电源系统： 充电器输入电压：100-240V AC 50/60Hz； 充电器输出电压：8.4V； 充电器输出电流：1A，具有过流保护特性，防止过充爆炸。 电池：18650标准2500毫安3C放电 资质证书 产品通过CE和ROHS认证、并获得相关软件著作权证书及专利证书。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"性能参数","slug":"2 XGO-Lite/性能参数","date":"2022-02-12T15:45:57.000Z","updated":"2022-08-02T05:41:14.781Z","comments":true,"path":"wiki/2 XGO-Lite/性能参数/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/2%20XGO-Lite/%E6%80%A7%E8%83%BD%E5%8F%82%E6%95%B0/","excerpt":"","text":"功能描述 可实现AI边缘计算图形化编程，例如人脸检测，物体分类，语音识别等常用程序。 可实现全向移动，六维姿态控制，多种运动步态及运动叠加，内置九轴陀螺仪，可保持身体自平衡。 产品配套专属的电脑端图形化编程平台，内嵌常用例程。 伺服舵机具有关节角度回读功能，可用于示教编程。 平台特性 IMU姿势自稳--通过IMU获得的姿态数据，采用闭环控制的方式，无论平面如何晃动，机器狗都保持稳定。 整机六自由度姿态控制--足尖不动的情况下，实现身体六个自由度的运动控制。 IMU姿势柔顺--通过IMU获得的姿态数据，闭环控制实现机器狗可以实适应外力，调整到手掰动的目标姿态，实现示教功能。 用户通讯与二次编程接口--开放底层串口协议，用于二次开发和验证。 运动步态规划--机器狗低中高三种姿势匹配三种速度，采用不同的步态策略和规划算法 运动学与动力学仿真接口--在ros环境下，在rviz和gazebo平台上进行运动学与动力学仿真。 全向运动控制--由于具有12个主动关节，通过运动学解耦实现机器狗前进平移转动全向运动，并支持多个方向的运动叠加。 人工智能--机器视觉，人脸识别，语音识别，模行训练等AI功能。 配置参数 机器狗套件包含12个总线舵机；AI模组；机器狗驱动和钣金件；电源适配器 1个。 机器狗零件材质为铝合金材质，阳极氧化上色，安全无毒。 定制串口总线伺服舵机，可实现精准动作的控制及表达。 配套完整的课程体系，包含教学PPT，教师教案，例程以及PC端编程平台。 技术参数 整机参数: 型号：XGO-lite 2 尺寸：默认站姿长23cm宽14cm高17cm 重量：600g 材质：身体为航空铝材，腿为ABS工程塑料 舵机参数: 型号：总线串口舵机 输出扭矩：2.3KG•CM； 转速（S/60°）：0.11 S/60°； 工作电压范围：4.8V～7.4V 工作温度：-20℃～ +60℃； 角度范围：0-270°； 重量：13±1g。 马达类型：铁芯 AI模组： 树莓派CM4模组 电源系统： 充电器输入电压：100-240V AC 50/60Hz； 充电器输出电压：8.4V； 充电器输出电流：1A，具有过流保护特性，防止过充爆炸。 电池：18650标准2500毫安3C放电 资质证书 产品通过CE和ROHS认证、并获得相关软件著作权证书及专利证书。","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki/categories/2-XGO-Lite/"}],"tags":[]},{"title":"包装清单","slug":"1 XGO-Mini Edu/包装清单","date":"2022-02-11T15:45:57.000Z","updated":"2022-08-02T05:41:14.418Z","comments":true,"path":"wiki/1 XGO-Mini Edu/包装清单/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E5%8C%85%E8%A3%85%E6%B8%85%E5%8D%95/","excerpt":"","text":"XGO-Mini K210AI编程机器狗套件包含: XGO-Mini K210机器狗整机 机器狗外包装 8.4V1A专用锂电池充电器 microusb数据线 随机说明及快速使用手册下载 包装清单图一 ### 包装清单图二 ### 包装清单图三 包装清单图四","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"包装清单","slug":"2 XGO-Lite/包装清单","date":"2022-02-11T15:45:57.000Z","updated":"2022-08-02T05:41:14.775Z","comments":true,"path":"wiki/2 XGO-Lite/包装清单/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/2%20XGO-Lite/%E5%8C%85%E8%A3%85%E6%B8%85%E5%8D%95/","excerpt":"","text":"XGO-lite 2编程机器狗套件包含: XGO-lite 2机器狗整机 8.4V1A专用锂电池充电器 XGO-lite 2中文用户手册 XGO-lite 2相关配件","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki/categories/2-XGO-Lite/"}],"tags":[]},{"title":"产品简介","slug":"1 XGO-Mini Edu/产品简介","date":"2022-02-10T15:45:57.000Z","updated":"2022-08-02T05:41:14.362Z","comments":true,"path":"wiki/1 XGO-Mini Edu/产品简介/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/1%20XGO-Mini%20Edu/%E4%BA%A7%E5%93%81%E7%AE%80%E4%BB%8B/","excerpt":"","text":"XGO-Mini K210简介 XGO-Mini K210是一款具有十二自由度桌面级Al机器狗，内置勘智K210芯片实现AI边缘计算应用。可实现全向移动、六维姿态控制、姿态稳定、多种运动步态，内部搭载9轴IMU、关节位置传感器和电流传感器反馈自身姿态和关节转角与力矩，用于内部算法和二次开发。支持电脑对机器狗进行图形化和python编程，开发AI应用。 XGO-Mini 海外众筹页面 全球最大的黑科技产品众筹平台KickstarterXGO-Mini, Advanced Quadruped Robot With AI Modules。 全球科技众筹平台巨头IndiegogoXGO-Mini, Advanced Quadruped Robot With AI Modules。 XGO-Mini 海外分销商页面 世界领先的机器人产品供应商Robotshop。XGO Mini Quadruped Robot Dog。 XGO-Mini 国内外媒体报道 嘉楠科技官网推荐搭载勘智AI芯片的桌面级机器狗产品XGO-Mini恭喜内嵌K210的 XGO mini 上线一小时实现众筹目标。 国内领先的机器人行业公众号机器人大讲堂特别报道哈工大创业团队造了个国产mini波士顿动力狗？一小时完成众筹。 XGO-Mini 海外大V测评 Youtube最受欢迎的Python专家sentdex-110万位订阅者Robot Dogs: A Programmer's Best Friend。 Youtube最火的科技频道Maker's Muse-91.7万位订阅者My new robot dog! XGO-Mini Review。 Youtube机器人专家KhanFlicks-82.4万位订阅者UNBOXING &amp; LETS PLAY! - XGO-Mini - The AI Cyber Robot Dog that can Dance!。 c't 3003德国网红达人-2.92万位订阅者Wau! Ein Boston-Dynamics-Klon für 550 Euro! Wir haben den XGO Mini auf Chip und Nieren getestet.。","categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"}],"tags":[]},{"title":"产品简介","slug":"2 XGO-Lite/产品简介","date":"2022-02-10T15:45:57.000Z","updated":"2022-08-02T05:41:14.756Z","comments":true,"path":"wiki/2 XGO-Lite/产品简介/","link":"","permalink":"https://xgorobot.github.io/XgoWiki/wiki/2%20XGO-Lite/%E4%BA%A7%E5%93%81%E7%AE%80%E4%BB%8B/","excerpt":"","text":"XGO-lite 2 简介 XGO-lite 2是一款具有十二自由度桌面级Al机器狗，内置树莓派CM4模组，实现AI应用。可实现全向移动、六维姿态控制、姿态稳定、多种运动步态，内部搭载9轴IMU、关节位置传感器和电流传感器反馈自身姿态和关节转角与力矩，用于内部算法和二次开发。支持电脑对机器狗进行图形化和python编程，开发AI应用。 XGO-Mini 海外众筹页面 全球最大的黑科技产品众筹平台KickstarterXGO-Mini, Advanced Quadruped Robot With AI Modules。 全球科技众筹平台巨头IndiegogoXGO-Mini, Advanced Quadruped Robot With AI Modules。 XGO-Mini 海外分销商页面 世界领先的机器人产品供应商Robotshop。XGO Mini Quadruped Robot Dog。 XGO-Mini 国内外媒体报道 嘉楠科技官网推荐搭载勘智AI芯片的桌面级机器狗产品XGO-Mini恭喜内嵌K210的 XGO mini 上线一小时实现众筹目标。 国内领先的机器人行业公众号机器人大讲堂特别报道哈工大创业团队造了个国产mini波士顿动力狗？一小时完成众筹。 XGO-Mini 海外大V测评 Youtube最受欢迎的Python专家sentdex-110万位订阅者Robot Dogs: A Programmer's Best Friend。 Youtube最火的科技频道Maker's Muse-91.7万位订阅者My new robot dog! XGO-Mini Review。 Youtube机器人专家KhanFlicks-82.4万位订阅者UNBOXING &amp; LETS PLAY! - XGO-Mini - The AI Cyber Robot Dog that can Dance!。","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki/categories/2-XGO-Lite/"}],"tags":[]}],"categories":[{"name":"1 XGO-Mini Edu","slug":"1-XGO-Mini-Edu","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/"},{"name":"四足机器人背景知识","slug":"1-XGO-Mini-Edu/四足机器人背景知识","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86/"},{"name":"二次开发","slug":"1-XGO-Mini-Edu/二次开发","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"},{"name":"3 XGO-Ultra","slug":"3-XGO-Ultra","permalink":"https://xgorobot.github.io/XgoWiki/categories/3-XGO-Ultra/"},{"name":"常见问题","slug":"1-XGO-Mini-Edu/常见问题","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"name":"故障排除","slug":"1-XGO-Mini-Edu/故障排除","permalink":"https://xgorobot.github.io/XgoWiki/categories/1-XGO-Mini-Edu/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/"},{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki/categories/2-XGO-Lite/"}],"tags":[]}